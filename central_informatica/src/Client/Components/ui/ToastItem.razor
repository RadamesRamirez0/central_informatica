@using Microsoft.AspNetCore.Components
@implements IDisposable

<div class="@GetToastClasses()" @onclick="Hide">
    <div class="flex items-center justify-between gap-3">
        <span class="flex-1 text-sm leading-relaxed">@Message</span>
        <button
            class="flex items-center justify-center w-6 h-6 rounded-full hover:bg-white/10 transition-colors duration-200"
            @onclick="Hide" @onclick:stopPropagation="true">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
        </button>
    </div>
</div>

@code {
    [Parameter] public string Message { get; set; } = string.Empty;
    [Parameter] public string Type { get; set; } = "default";
    [Parameter] public EventCallback OnHide { get; set; }

    private bool IsVisible { get; set; } = true;

    private async Task Hide()
    {
        IsVisible = false;
        StateHasChanged();

        if (OnHide.HasDelegate)
        {
            await OnHide.InvokeAsync();
        }
    }

    private string GetToastClasses()
    {
        var baseClasses = "min-w-80 max-w-md p-4 rounded-lg shadow-lg cursor-pointer transition-all duration-300 ease-in-out";

        var visibilityClasses = IsVisible
        ? "opacity-100 translate-x-0"
        : "opacity-0 translate-x-full pointer-events-none";

        var typeClasses = Type.ToLower() switch
        {
            "success" => "bg-green-600 text-white",
            "error" => "bg-red-600 text-white",
            "warning" => "bg-yellow-600 text-white",
            "info" => "bg-blue-600 text-white",
            _ => "bg-gray-800 text-white"
        };

        return $"{baseClasses} {visibilityClasses} {typeClasses}";
    }

    public void Dispose()
    {
        // No cleanup needed for this component
    }
}
